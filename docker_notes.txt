Dockerfile
-----------------------
Define a container with Dockerfile

Dockerfiles describe how to assemble a private filesystem for a container, and can also contain some metadata describing how to run a container based on this image.

Writing a Dockerfile is the first step to containerizing an application. You can think of these Dockerfile commands as a step-by-step recipe on how to build up your image.


ContainersðŸ”—
------------------------
Fundamentally, a container is nothing but a running process, with some added encapsulation features applied to it in order to keep it isolated from the host and from other containers. One of the most important aspects of container isolation is that each container interacts with its own private filesystem; this filesystem is provided by a Docker image.


Images
------------------------
An image includes everything needed to run an application - the code or binary, runtimes, dependencies, and any other filesystem objects required.


Building an image
----------------------
Done using the docker build command. See commands for more details.

docker build command should be run in same directory as Dockerfile you wish to use to build an image

e.g. docker build --tag "name"


Running an image as a conainter
--------------------------------
Once an image is built, it can be run as a container using docker run.

e.g. docker run --rm -it




In general, the development workflow looks like this:

1. Create and test individual containers for each component of your application by first creating Docker images:
	Using a Dockerfile, run docker build --tage "name"

2. Assemble your containers and supporting infrastructure into a complete application.

3. Test, share, and deploy your complete containerized application.


Commands
_______________________________________

docker image
-----------------

Description: Manages docker images

ls - list all images



docker ps
-----------------

Description: List containers

--all lists all container including ones not currently running



docker build
-----------------


--tag bulletinboard:1.0 .












spatel@pc2050-ubu:~/work-repos/docker-working$ docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash